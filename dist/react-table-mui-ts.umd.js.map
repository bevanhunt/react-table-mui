{"version":3,"file":"react-table-mui-ts.umd.js","sources":["../src/FilterChipBar.tsx","../src/filters/fuzzyFilter.tsx","../src/filters/numericFilter.tsx","../src/TableStyles.tsx","../src/ResizeHandle.tsx","../src/TablePagination.tsx","../src/ColumnHidePage.tsx","../src/FilterPage.tsx","../src/TableToolbar.tsx","../src/TooltipCell.tsx","../src/Table.tsx","../utils/object.ts","../utils/useLocalStorage.tsx","../utils/useDebounce.tsx"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable no-case-declarations */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable default-case */\nimport { Chip } from '@mui/material';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport React, { ReactElement, useCallback } from 'react';\nimport {\n  ColumnInstance, FilterValue, IdType, TableInstance,\n} from 'react-table';\n\nconst useStyles = makeStyles(\n  createStyles({\n    filtersActiveLabel: {\n      color: '#998',\n      fontSize: '14px',\n      paddingRight: 10,\n    },\n    chipZone: {\n      padding: '18px 0 5px 10px',\n      width: '100%',\n    },\n    chipLabel: {\n      fontWeight: 500,\n      marginRight: 5,\n    },\n    filterChip: {\n      marginRight: 4,\n      color: '#222',\n    },\n  }),\n);\n\ntype FilterChipBarProps<T extends Record<string, unknown>> = {\n  instance: TableInstance<T>\n};\n\nconst getFilterValue = (column: ColumnInstance<any>, filterValue: FilterValue) => {\n  switch (column.filter) {\n    case 'between':\n      const min = filterValue[0];\n      const max = filterValue[1];\n      return min ? (max ? `${min}-${max}` : `>=${min}`) : `<=${max}`;\n  }\n  return filterValue;\n};\n\nexport function FilterChipBar<T extends Record<string, unknown>>({\n  instance,\n}: FilterChipBarProps<T>): ReactElement | null {\n  const classes = useStyles({});\n  const {\n    allColumns,\n    setFilter,\n    state: { filters },\n  } = instance;\n  const handleDelete = useCallback(\n    (id: string | number) => {\n      setFilter(id as IdType<T>, undefined);\n    },\n    [setFilter],\n  );\n\n  return Object.keys(filters).length > 0 ? (\n    <div className={classes.chipZone}>\n      <span className={classes.filtersActiveLabel}>Active filters:</span>\n      {filters\n        && allColumns.map((column) => {\n          const filter = filters.find((f) => f.id === column.id);\n          const value = filter && filter.value;\n          return (\n            value && (\n              <Chip\n                className={classes.filterChip}\n                key={column.id}\n                label={(\n                  <>\n                    <span className={classes.chipLabel}>\n                      {column.render('Header')}\n                      :\n                      {' '}\n                    </span>\n                    {getFilterValue(column, value)}\n                  </>\n                )}\n                onDelete={() => handleDelete(column.id)}\n                variant=\"outlined\"\n              />\n            )\n          );\n        })}\n    </div>\n  ) : null;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/prefer-default-export */\nimport { matchSorter } from 'match-sorter';\nimport { FilterValue, IdType, Row } from 'react-table';\n\nexport function fuzzyTextFilter<T extends Record<string, unknown>>(\n  rows: Array<Row<T>>,\n  id: Array<IdType<T>>,\n  filterValue: FilterValue,\n): Array<Row<T>> {\n  return matchSorter(rows, filterValue, {\n    keys: [(row: Row<T>) => row.values[id[0]]],\n  });\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilter.autoRemove = (val: any) => !val;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/prefer-default-export */\n/* eslint-disable default-case */\nimport { FilterValue, IdType, Row } from 'react-table';\n\nconst regex = /([=<>!]*)\\s*((?:[0-9].?[0-9]*)+)/;\n\nfunction parseValue(filterValue: FilterValue) {\n  // eslint-disable-next-line eqeqeq\n  const defaultComparator = (val: any) => val == filterValue;\n  const tokens = regex.exec(filterValue);\n  if (!tokens) {\n    return defaultComparator;\n  }\n  switch (tokens[1]) {\n    case '>':\n      return (val: any) => parseFloat(val) > parseFloat(tokens[2]);\n    case '<':\n      return (val: any) => parseFloat(val) < parseFloat(tokens[2]);\n    case '<=':\n      return (val: any) => parseFloat(val) <= parseFloat(tokens[2]);\n    case '>=':\n      return (val: any) => parseFloat(val) >= parseFloat(tokens[2]);\n    case '=':\n      return (val: any) => parseFloat(val) === parseFloat(tokens[2]);\n    case '!':\n      return (val: any) => parseFloat(val) !== parseFloat(tokens[2]);\n  }\n  return defaultComparator;\n}\n\nexport function numericTextFilter<T extends Record<string, unknown>>(\n  rows: Array<Row<T>>,\n  id: Array<IdType<T>>,\n  filterValue: FilterValue,\n): Array<Row<T>> {\n  const comparator = parseValue(filterValue);\n  return rows.filter((row) => comparator(row.values[id[0]]));\n}\n\n// Let the table remove the filter if the string is empty\nnumericTextFilter.autoRemove = (val: any) => !val;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/function-component-definition */\n/* eslint-disable react/require-default-props */\n/* eslint-disable max-len */\nimport { createTheme } from '@mui/system';\nimport {\n  Checkbox, Theme,\n} from '@mui/material';\nimport { createStyles, makeStyles, styled } from '@mui/styles';\nimport MuiTableTable from '@mui/material/Table';\nimport { TableTypeMap } from '@mui/material/Table/Table';\nimport MuiTableBody from '@mui/material/TableBody';\nimport { TableBodyTypeMap } from '@mui/material/TableBody/TableBody';\nimport MuiTableCell from '@mui/material/TableCell';\nimport { TableCellProps } from '@mui/material/TableCell/TableCell';\nimport MuiTableHead from '@mui/material/TableHead';\nimport { TableHeadTypeMap } from '@mui/material/TableHead/TableHead';\nimport MuiTableRow from '@mui/material/TableRow';\nimport { TableRowTypeMap } from '@mui/material/TableRow/TableRow';\nimport cx from 'classnames';\nimport React, { CSSProperties } from 'react';\n\nexport const useStyles = makeStyles((theme: Theme) => createStyles({\n  tableTable: {\n    borderSpacing: 0,\n    border: '1px solid rgba(224, 224, 224, 1)',\n    width: '100%',\n  },\n  tableHead: {},\n  tableHeadRow: {\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.text.primary,\n    borderBottom: '1px solid rgba(224, 224, 224, 1)',\n    '&:hover $resizeHandle': {\n      opacity: 1,\n    },\n  },\n  tableHeadCell: {\n    padding: '16px 1px 16px 16px',\n    fontSize: '0.875rem',\n    textAlign: 'left',\n    verticalAlign: 'inherit',\n    color: theme.palette.text.primary,\n    fontWeight: 500,\n    lineHeight: '1.5rem',\n    borderRight: '1px solid rgba(224, 224, 224, 1)',\n    '&:last-child': {\n      borderRight: 'none',\n    },\n  },\n  tableBody: {},\n  tableRow: {\n    color: 'inherit',\n    outline: 0,\n    verticalAlign: 'middle',\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.07)',\n    },\n    borderBottom: '1px solid rgba(224, 224, 224, 1)',\n    '&:last-child': {\n      borderBottom: 'none',\n    },\n    '&.rowSelected': {\n      backgroundColor: 'rgba(0, 0, 0, 0.04)',\n      '&:hover': {\n        backgroundColor: 'rgba(0, 0, 0, 0.07)',\n      },\n    },\n    '&.clickable': {\n      cursor: 'pointer',\n    },\n  },\n  tableLabel: {},\n  tableCell: {\n    padding: '8px 16px',\n    fontSize: '0.875rem',\n    textAlign: 'left',\n    fontWeight: 300,\n    lineHeight: 1.3,\n    verticalAlign: 'inherit',\n    color: theme.palette.text.primary,\n    borderRight: '1px solid rgba(224, 224, 224, 1)',\n    '&:last-child': {\n      borderRight: 'none',\n    },\n  },\n  resizeHandle: {\n    position: 'absolute',\n    cursor: 'col-resize',\n    zIndex: 100,\n    opacity: 0,\n    borderLeft: `1px solid ${theme.palette.primary.light}`,\n    borderRight: `1px solid ${theme.palette.primary.light}`,\n    height: '50%',\n    top: '25%',\n    transition: 'all linear 100ms',\n    right: -2,\n    width: 3,\n    '&.handleActive': {\n      opacity: 1,\n      border: 'none',\n      backgroundColor: theme.palette.primary.light,\n      height: 'calc(100% - 4px)',\n      top: '2px',\n      right: -1,\n      width: 1,\n    },\n  },\n  tableSortLabel: {\n    '& svg': {\n      width: 16,\n      height: 16,\n      marginTop: 0,\n      marginLeft: 2,\n    },\n  },\n  headerIcon: {\n    '& svg': {\n      width: 16,\n      height: 16,\n      marginTop: 4,\n      marginRight: 0,\n    },\n  },\n  iconDirectionAsc: {\n    transform: 'rotate(90deg)',\n  },\n  iconDirectionDesc: {\n    transform: 'rotate(180deg)',\n  },\n  cellIcon: {\n    '& svg': {\n      width: 16,\n      height: 16,\n      marginTop: 3,\n    },\n  },\n}));\n\nconst areEqual = (prevProps: any, nextProps: any) => prevProps.checked === nextProps.checked && prevProps.indeterminate === nextProps.indeterminate;\n\ntype CN = { className?: string; style?: CSSProperties, children?: React.ReactNode };\n\nconst theme = createTheme();\n\nexport const TableTable: React.FC<Partial<TableTypeMap> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles();\n  return (\n    <MuiTableTable className={cx(className, classes.tableTable)} {...rest}>\n      {children}\n    </MuiTableTable>\n  );\n};\n\nexport const TableBody: React.FC<Partial<TableBodyTypeMap> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles();\n  return (\n    <MuiTableBody className={cx(className, classes.tableBody)} {...rest}>\n      {children}\n    </MuiTableBody>\n  );\n};\n\nexport const TableHead: React.FC<Partial<TableHeadTypeMap> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles();\n  return (\n    <MuiTableHead className={cx(className, classes.tableHead)} {...rest}>\n      {children}\n    </MuiTableHead>\n  );\n};\n\nexport const TableHeadRow: React.FC<Partial<TableRowTypeMap> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles();\n  return (\n    <MuiTableRow className={cx(className, classes.tableHeadRow)} {...rest}>\n      {children}\n    </MuiTableRow>\n  );\n};\n\nexport const TableHeadCell: React.FC<Partial<TableCellProps> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles();\n  return (\n    <MuiTableCell className={cx(className, classes.tableHeadCell)} {...rest}>\n      {children}\n    </MuiTableCell>\n  );\n};\n\nexport const TableRow: React.FC<Partial<TableRowTypeMap> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles();\n  return (\n    <MuiTableRow className={cx(className, classes.tableRow)} {...rest}>\n      {children}\n    </MuiTableRow>\n  );\n};\n\nexport const TableCell: React.FC<Partial<TableCellProps> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles();\n  return (\n    <MuiTableCell className={cx(className, classes.tableCell)} {...rest}>\n      {children}\n    </MuiTableCell>\n  );\n};\n\nexport const TableLabel: React.FC<CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles();\n  return (\n    <div className={cx(className, classes.tableLabel)} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport const HeaderCheckbox = React.memo(\n  styled(Checkbox)({\n    fontSize: '1rem',\n    margin: '-8px 0 -8px -15px',\n    padding: '8px 9px',\n    '& svg': {\n      width: '24px',\n      height: '24px',\n    },\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  }),\n  areEqual,\n);\n\nexport const RowCheckbox = React.memo(\n  styled(Checkbox)({\n    fontSize: '14px',\n    margin: '-9px 0 -8px -15px',\n    padding: '5px 9px',\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n    '& svg': {\n      width: 24,\n      height: 24,\n    },\n  }),\n  areEqual,\n);\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable import/prefer-default-export */\nimport cx from 'classnames';\nimport React, { ReactElement } from 'react';\nimport { ColumnInstance } from 'react-table';\n\nimport { useStyles } from './TableStyles';\n\nexport function ResizeHandle<T extends Record<string, unknown>>({\n  column,\n}: {\n  column: ColumnInstance<T>\n}): ReactElement {\n  const classes = useStyles();\n  return (\n    <div\n      {...column.getResizerProps()}\n      style={{ cursor: 'col-resize' }} // override the useResizeColumns default\n      className={cx({\n        [classes.resizeHandle]: true,\n        handleActive: column.isResizing,\n      })}\n    />\n  );\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/prefer-default-export */\n/* eslint-disable max-len */\nimport { TablePagination as _MuiTablePagination, Theme } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport {\n  createStyles, makeStyles\n} from '@mui/styles';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport React, {\n  PropsWithChildren, ReactElement, useCallback,\n} from 'react';\nimport { TableInstance } from 'react-table';\n\nconst rowsPerPageOptions = [10, 25, 50];\n\n// avoid all of the redraws caused by the internal withStyles\nconst interestingPropsEqual = (prevProps: any, nextProps: any) => prevProps.count === nextProps.count\n  && prevProps.rowsPerPage === nextProps.rowsPerPage\n  && prevProps.page === nextProps.page\n  && prevProps.onChangePage === nextProps.onChangePage\n  && prevProps.onChangeRowsPerPage === nextProps.onChangeRowsPerPage;\n\n// a bit of a type hack to keep OverridableComponent working as desired\ntype T = typeof _MuiTablePagination;\nconst MuiTablePagination: T = React.memo(_MuiTablePagination, interestingPropsEqual) as T;\n\ninterface TablePaginationActionsProps {\n  count: number\n  page: number\n  rowsPerPage: number\n  onPageChange: (event: React.MouseEvent<HTMLButtonElement>, newPage: number) => void\n}\n\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\n  const useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  }));\n  const classes = useStyles();\n  const {\n    count, page, rowsPerPage, onPageChange,\n  } = props;\n\n  const handleFirstPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        <FirstPageIcon />\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        <KeyboardArrowLeft />\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        <KeyboardArrowRight />\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        <LastPageIcon />\n      </IconButton>\n    </div>\n  );\n}\n\nexport function TablePagination<T extends Record<string, unknown>>({\n  instance,\n}: PropsWithChildren<{ instance: TableInstance<T> }>): ReactElement | null {\n  const {\n    state: { pageIndex, pageSize, rowCount = instance.rows.length },\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n  } = instance;\n\n  const handleChangePage = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null, newPage: number) => {\n      if (newPage === pageIndex + 1) {\n        nextPage();\n      } else if (newPage === pageIndex - 1) {\n        previousPage();\n      } else {\n        gotoPage(newPage);\n      }\n    },\n    [gotoPage, nextPage, pageIndex, previousPage],\n  );\n\n  const onChangeRowsPerPage = useCallback(\n    (e) => {\n      setPageSize(Number(e.target.value));\n    },\n    [setPageSize],\n  );\n\n  return rowCount ? (\n    <MuiTablePagination\n      sx={{\n        '.MuiTablePagination-selectLabel': {\n          paddingTop: '12px',\n        },\n        '.MuiTablePagination-displayedRows': {\n          paddingTop: '15px',\n        },\n      }}\n      rowsPerPageOptions={rowsPerPageOptions}\n      component=\"div\"\n      count={rowCount}\n      rowsPerPage={pageSize}\n      page={pageIndex}\n      onPageChange={handleChangePage}\n      onRowsPerPageChange={onChangeRowsPerPage}\n      ActionsComponent={TablePaginationActions}\n    />\n  ) : null;\n}\n","/* eslint-disable import/prefer-default-export */\n/* eslint-disable react/require-default-props */\nimport {\n  Checkbox, FormControlLabel, Popover, Typography,\n} from '@mui/material';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport React, { ReactElement } from 'react';\nimport { TableInstance } from 'react-table';\n\nconst useStyles = makeStyles(\n  createStyles({\n    columnsPopOver: {\n      padding: 24,\n    },\n    popoverTitle: {\n      fontWeight: 500,\n      padding: '0 24px 24px 0',\n      textTransform: 'uppercase',\n    },\n    grid: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(2, 198px)',\n      '@media (max-width: 600px)': {\n        gridTemplateColumns: 'repeat(1, 160px)',\n      },\n      gridColumnGap: 6,\n      gridRowGap: 6,\n    },\n  }),\n);\n\ntype ColumnHidePageProps<T extends Record<string, unknown>> = {\n  instance: TableInstance<T>\n  anchorEl?: Element\n  onClose: () => void\n  show: boolean\n};\n\nconst id = 'popover-column-hide';\n\nexport function ColumnHidePage<T extends Record<string, unknown>>({\n  instance,\n  anchorEl,\n  onClose,\n  show,\n}: ColumnHidePageProps<T>): ReactElement | null {\n  const classes = useStyles({});\n  const { allColumns, toggleHideColumn } = instance;\n  const hideableColumns = allColumns.filter((column) => !(column.id === '_selector'));\n  const checkedCount = hideableColumns.reduce((acc, val) => acc + (val.isVisible ? 0 : 1), 0);\n\n  const onlyOneOptionLeft = checkedCount + 1 >= hideableColumns.length;\n\n  return hideableColumns.length > 1 ? (\n    <div>\n      <Popover\n        anchorEl={anchorEl}\n        className={classes.columnsPopOver}\n        id={id}\n        onClose={onClose}\n        open={show}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <div className={classes.columnsPopOver}>\n          <Typography className={classes.popoverTitle}>Visible Columns</Typography>\n          <div className={classes.grid}>\n            {hideableColumns.map((column) => (\n              <FormControlLabel\n                key={column.id}\n                control={<Checkbox value={`${column.id}`} disabled={column.isVisible && onlyOneOptionLeft} />}\n                label={column.render('Header')}\n                checked={column.isVisible}\n                onChange={() => toggleHideColumn(column.id, column.isVisible)}\n              />\n            ))}\n          </div>\n        </div>\n      </Popover>\n    </div>\n  ) : null;\n}\n","/* eslint-disable react/require-default-props */\n/* eslint-disable import/prefer-default-export */\nimport {\n  Button, Popover, Typography,\n} from '@mui/material';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport React, { FormEvent, ReactElement, useCallback } from 'react';\nimport { TableInstance } from 'react-table';\n\nconst useStyles = makeStyles(\n  createStyles({\n    columnsPopOver: {\n      padding: 24,\n    },\n    filtersResetButton: {\n      position: 'absolute',\n      top: 18,\n      right: 21,\n    },\n    popoverTitle: {\n      fontWeight: 500,\n      padding: '0 24px 24px 0',\n      textTransform: 'uppercase',\n    },\n    grid: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(2, 218px)',\n      '@media (max-width: 600px)': {\n        gridTemplateColumns: 'repeat(1, 180px)',\n      },\n      gridColumnGap: 24,\n      gridRowGap: 24,\n    },\n    cell: {\n      width: '100%',\n      display: 'inline-flex',\n      flexDirection: 'column',\n    },\n    hidden: {\n      display: 'none',\n    },\n  }),\n);\n\ntype FilterPageProps<T extends Record<string, unknown>> = {\n  instance: TableInstance<T>\n  anchorEl?: Element\n  onClose: () => void\n  show: boolean\n};\n\nexport function FilterPage<T extends Record<string, unknown>>({\n  instance,\n  anchorEl,\n  onClose,\n  show,\n}: FilterPageProps<T>): ReactElement {\n  const classes = useStyles({});\n  const { allColumns, setAllFilters } = instance;\n\n  const onSubmit = useCallback(\n    (e: FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      onClose();\n    },\n    [onClose],\n  );\n\n  const resetFilters = useCallback(() => {\n    setAllFilters([]);\n  }, [setAllFilters]);\n\n  return (\n    <div>\n      <Popover\n        anchorEl={anchorEl}\n        id=\"popover-filters\"\n        onClose={onClose}\n        open={show}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <div className={classes.columnsPopOver}>\n          <Typography className={classes.popoverTitle}>Filters</Typography>\n          <form onSubmit={onSubmit}>\n            <Button className={classes.filtersResetButton} color=\"primary\" onClick={resetFilters}>\n              Reset\n            </Button>\n            <div className={classes.grid}>\n              {allColumns\n                .filter((it) => it.canFilter)\n                .map((column) => (\n                  <div key={column.id} className={classes.cell}>\n                    {column.render('Filter')}\n                  </div>\n                ))}\n            </div>\n            <Button className={classes.hidden} type=\"submit\">\n              &nbsp;\n            </Button>\n          </form>\n        </div>\n      </Popover>\n    </div>\n  );\n}\n","/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable max-len */\nimport {\n  Button, IconButton, Toolbar, Tooltip,\n} from '@mui/material';\nimport { createStyles, makeStyles } from '@mui/styles';\nimport AddIcon from '@mui/icons-material/Add';\nimport CreateIcon from '@mui/icons-material/CreateOutlined';\nimport DeleteIcon from '@mui/icons-material/DeleteOutline';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport ViewColumnsIcon from '@mui/icons-material/ViewColumn';\nimport classnames from 'classnames';\nimport React, {\n  MouseEvent, MouseEventHandler, PropsWithChildren, ReactElement, useCallback, useState,\n} from 'react';\nimport { TableInstance } from 'react-table';\n\nimport { ColumnHidePage } from './ColumnHidePage';\nimport { FilterPage } from './FilterPage';\n\nexport const useStyles = makeStyles(() => createStyles({\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  leftButtons: {},\n  rightButtons: {},\n  leftIcons: {\n    '&:first-of-type': {\n      marginLeft: -12,\n    },\n  },\n  rightIcons: {\n    padding: 12,\n    marginTop: '-6px',\n    width: 48,\n    height: 48,\n    '&:last-of-type': {\n      marginRight: -12,\n    },\n  },\n}));\n\ntype InstanceActionButton<T extends Record<string, unknown>> = {\n  instance: TableInstance<T>\n  icon?: JSX.Element\n  onClick: any\n  enabled?: (instance: TableInstance<T>) => boolean\n  label: string\n  variant?: 'right' | 'left'\n};\n\ntype ActionButton = {\n  icon?: JSX.Element\n  onClick: MouseEventHandler\n  enabled?: boolean\n  label: string\n  variant?: 'right' | 'left'\n};\n\nexport function InstanceLabeledActionButton<T extends Record<string, unknown>>({\n  instance,\n  icon,\n  onClick,\n  label,\n  enabled = () => true,\n}: InstanceActionButton<T>): ReactElement {\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={onClick(instance)} disabled={!enabled(instance)}>\n      {icon}\n      {label}\n    </Button>\n  );\n}\n\nexport function LabeledActionButton({\n  icon, onClick, label, enabled = true,\n}: ActionButton): ReactElement {\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={onClick} disabled={!enabled}>\n      {icon}\n      {label}\n    </Button>\n  );\n}\n\nexport function InstanceSmallIconActionButton<T extends Record<string, unknown>>({\n  instance,\n  icon,\n  onClick,\n  label,\n  enabled = () => true,\n  variant,\n}: InstanceActionButton<T>): ReactElement {\n  const classes = useStyles({});\n  return (\n    <Tooltip title={label} aria-label={label}>\n      <span>\n        <IconButton\n          className={classnames({\n            [classes.rightIcons]: variant === 'right',\n            [classes.leftIcons]: variant === 'left',\n          })}\n          onClick={onClick(instance)}\n          disabled={!enabled(instance)}\n        >\n          {icon}\n        </IconButton>\n      </span>\n    </Tooltip>\n  );\n}\n\nexport function SmallIconActionButton({\n  icon,\n  onClick,\n  label,\n  enabled = true,\n  variant,\n}: ActionButton): ReactElement {\n  const classes = useStyles({});\n  return (\n    <Tooltip title={label} aria-label={label}>\n      <span>\n        <IconButton\n          className={classnames({\n            [classes.rightIcons]: variant === 'right',\n            [classes.leftIcons]: variant === 'left',\n          })}\n          onClick={onClick}\n          disabled={!enabled}\n        >\n          {icon}\n        </IconButton>\n      </span>\n    </Tooltip>\n  );\n}\n\ntype TableToolbarProps<T extends Record<string, unknown>> = {\n  instance: TableInstance<T>\n  onAdd?: any\n  onDelete?: any\n  onEdit?: any\n};\n\nexport function TableToolbar<T extends Record<string, unknown>>({\n  instance,\n  onAdd,\n  onDelete,\n  onEdit,\n}: PropsWithChildren<TableToolbarProps<T>>): ReactElement | null {\n  const { columns } = instance;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<Element | undefined>(undefined);\n  const [columnsOpen, setColumnsOpen] = useState(false);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const hideableColumns = columns.filter((column) => !(column.id === '_selector'));\n\n  const handleColumnsClick = useCallback(\n    (event: MouseEvent) => {\n      setAnchorEl(event.currentTarget);\n      setColumnsOpen(true);\n    },\n    [setAnchorEl, setColumnsOpen],\n  );\n\n  const handleFilterClick = useCallback(\n    (event: MouseEvent) => {\n      setAnchorEl(event.currentTarget);\n      setFilterOpen(true);\n    },\n    [setAnchorEl, setFilterOpen],\n  );\n\n  const handleClose = useCallback(() => {\n    setColumnsOpen(false);\n    setFilterOpen(false);\n    setAnchorEl(undefined);\n  }, []);\n\n  // toolbar with add, edit, delete, filter/search column select.\n  return (\n    <Toolbar className={classes.toolbar}>\n      <div className={classes.leftButtons}>\n        {onAdd && (\n          <InstanceSmallIconActionButton<T>\n            instance={instance}\n            icon={<AddIcon />}\n            onClick={onAdd}\n            label=\"Add\"\n            enabled={({ state }: TableInstance<T>) => !state.selectedRowIds || Object.keys(state.selectedRowIds).length === 0}\n            variant=\"left\"\n          />\n        )}\n        {onEdit && (\n          <InstanceSmallIconActionButton<T>\n            instance={instance}\n            icon={<CreateIcon />}\n            onClick={onEdit}\n            label=\"Edit\"\n            enabled={({ state }: TableInstance<T>) => state.selectedRowIds && Object.keys(state.selectedRowIds).length === 1}\n            variant=\"left\"\n          />\n        )}\n        {onDelete && (\n          <InstanceSmallIconActionButton<T>\n            instance={instance}\n            icon={<DeleteIcon />}\n            onClick={onDelete}\n            label=\"Delete\"\n            enabled={({ state }: TableInstance<T>) => state.selectedRowIds && Object.keys(state.selectedRowIds).length > 0}\n            variant=\"left\"\n          />\n        )}\n      </div>\n      <div className={classes.rightButtons}>\n        <ColumnHidePage<T> instance={instance} onClose={handleClose} show={columnsOpen} anchorEl={anchorEl} />\n        <FilterPage<T> instance={instance} onClose={handleClose} show={filterOpen} anchorEl={anchorEl} />\n        {hideableColumns.length > 1 && (\n          <SmallIconActionButton\n            icon={<ViewColumnsIcon />}\n            onClick={handleColumnsClick}\n            label=\"Show / hide columns\"\n            variant=\"right\"\n          />\n        )}\n        <SmallIconActionButton\n          icon={<FilterListIcon />}\n          onClick={handleFilterClick}\n          label=\"Filter by columns\"\n          variant=\"right\"\n        />\n      </div>\n    </Toolbar>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable max-len */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/function-component-definition */\nimport { Tooltip as MuiTooltip } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport React, { CSSProperties } from 'react';\nimport { CellProps } from 'react-table';\n\nconst useStyles = makeStyles({\n  truncated: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n});\n\nexport const TooltipCellRenderer: React.FC<CellProps<any>> = ({ cell: { value }, column: { align = 'left' } }) => (\n  <TooltipCell text={value} align={align} />\n);\n\ninterface TooltipProps {\n  text: string\n  tooltip?: string\n  align: string\n}\n\nexport const TooltipCell: React.FC<TooltipProps> = ({ text, tooltip = text, align }) => {\n  const classes = useStyles({});\n  return (\n    <MuiTooltip title={tooltip} className={classes.truncated} style={{ textAlign: align } as CSSProperties}>\n      <span>{text}</span>\n    </MuiTooltip>\n  );\n};\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable max-len */\n/* eslint-disable react/jsx-no-useless-fragment */\n/* eslint-disable react/function-component-definition */\n/* eslint-disable react/require-default-props */\nimport { TableSortLabel, TextField, Tooltip } from '@mui/material';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport KeyboardArrowUp from '@mui/icons-material/KeyboardArrowUp';\nimport cx from 'classnames';\nimport React, {\n  CSSProperties, MouseEventHandler, PropsWithChildren, ReactElement, useEffect,\n} from 'react';\nimport {\n  Cell,\n  CellProps,\n  ColumnInstance,\n  FilterProps,\n  HeaderGroup,\n  HeaderProps,\n  Hooks,\n  Meta,\n  Row,\n  TableInstance,\n  TableOptions,\n  useColumnOrder,\n  useExpanded,\n  useFilters,\n  useFlexLayout,\n  useGroupBy,\n  usePagination,\n  useResizeColumns,\n  useRowSelect,\n  useSortBy,\n  useTable,\n} from 'react-table';\n\nimport { camelToWords, useDebounce, useLocalStorage } from '../utils';\nimport { FilterChipBar } from './FilterChipBar';\nimport { fuzzyTextFilter, numericTextFilter } from './filters';\nimport { ResizeHandle } from './ResizeHandle';\nimport { TablePagination } from './TablePagination';\nimport {\n  HeaderCheckbox,\n  RowCheckbox,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeadCell,\n  TableHeadRow,\n  TableLabel,\n  TableRow,\n  TableTable,\n  useStyles,\n} from './TableStyles';\nimport { TableToolbar } from './TableToolbar';\nimport { TooltipCellRenderer } from './TooltipCell';\n\nexport interface TableProperties<T extends Record<string, unknown>> extends TableOptions<T> {\n  name: string\n  onAdd?: (instance: TableInstance<T>) => MouseEventHandler\n  onDelete?: (instance: TableInstance<T>) => MouseEventHandler\n  onEdit?: (instance: TableInstance<T>) => MouseEventHandler\n  onClick?: (row: Row<T>) => void\n}\n\nconst DefaultHeader: React.FC<HeaderProps<any>> = ({ column }) => (\n  <>{column.id.startsWith('_') ? null : camelToWords(column.id)}</>\n);\n\n// yes this is recursive, but the depth never exceeds three so it seems safe enough\nconst findFirstColumn = <T extends Record<string, unknown>>(columns: Array<ColumnInstance<T>>): ColumnInstance<T> => (columns[0].columns ? findFirstColumn(columns[0].columns) : columns[0]);\n\nfunction DefaultColumnFilter<T extends Record<string, unknown>>({ columns, column }: FilterProps<T>) {\n  const {\n    id, filterValue, setFilter, render,\n  } = column;\n  const [value, setValue] = React.useState(filterValue || '');\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  // ensure that reset loads the new value\n  useEffect(() => {\n    setValue(filterValue || '');\n  }, [filterValue]);\n\n  const isFirstColumn = findFirstColumn(columns) === column;\n  return (\n    <TextField\n      name={id}\n      label={render('Header')}\n      InputLabelProps={{ htmlFor: id }}\n      value={value}\n      autoFocus={isFirstColumn}\n      variant=\"standard\"\n      onChange={handleChange}\n      onBlur={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n    />\n  );\n}\n\nconst getStyles = (props: any, disableResizing = false, align = 'left') => [\n  props,\n  {\n    style: {\n      justifyContent: align === 'right' ? 'flex-end' : 'flex-start',\n      alignItems: 'flex-start',\n      display: 'flex',\n    },\n  },\n];\n\nconst selectionHook = (hooks: Hooks<any>) => {\n  hooks.allColumns.push((columns) => [\n    // Let's make a column for selection\n    {\n      id: '_selector',\n      disableResizing: true,\n      disableGroupBy: true,\n      minWidth: 45,\n      width: 45,\n      maxWidth: 45,\n      Aggregated: undefined,\n      // The header can use the table's getToggleAllRowsSelectedProps method\n      // to render a checkbox\n      Header: ({ getToggleAllRowsSelectedProps }: HeaderProps<any>) => (\n        <HeaderCheckbox {...getToggleAllRowsSelectedProps()} />\n      ),\n      // The cell can use the individual row's getToggleRowSelectedProps method\n      // to the render a checkbox\n      Cell: ({ row }: CellProps<any>) => <RowCheckbox {...row.getToggleRowSelectedProps()} />,\n    },\n    ...columns,\n  ]);\n  hooks.useInstanceBeforeDimensions.push(({ headerGroups }) => {\n    // fix the parent group of the selection button to not be resizable\n    const selectionGroupHeader = headerGroups[0].headers[0];\n    selectionGroupHeader.canResize = false;\n  });\n};\n\nconst headerProps = <T extends Record<string, unknown>>(props: any, { column }: Meta<T, { column: HeaderGroup<T> }>) => getStyles(props, column && column.disableResizing, column && column.align);\n\nconst cellProps = <T extends Record<string, unknown>>(props: any, { cell }: Meta<T, { cell: Cell<T> }>) => getStyles(props, cell.column && cell.column.disableResizing, cell.column && cell.column.align);\n\nconst defaultColumn = {\n  Filter: DefaultColumnFilter,\n  Cell: TooltipCellRenderer,\n  Header: DefaultHeader,\n  // When using the useFlexLayout:\n  minWidth: 30, // minWidth is only used as a limit for resizing\n  width: 150, // width is used for both the flex-basis and flex-grow\n  maxWidth: 200, // maxWidth is only used as a limit for resizing\n};\n\nconst hooks = [\n  useColumnOrder,\n  useFilters,\n  useGroupBy,\n  useSortBy,\n  useExpanded,\n  useFlexLayout,\n  usePagination,\n  useResizeColumns,\n  useRowSelect,\n  selectionHook,\n];\n\nconst filterTypes = {\n  fuzzyText: fuzzyTextFilter,\n  numeric: numericTextFilter,\n};\n\nexport function Table<T extends Record<string, unknown>>(props: PropsWithChildren<TableProperties<T>>): ReactElement {\n  const {\n    name, columns, onAdd, onDelete, onEdit, onClick,\n  } = props;\n  const classes = useStyles();\n\n  const [initialState, setInitialState] = useLocalStorage(`tableState:${name}`, {});\n  const instance = useTable<T>(\n    {\n      ...props,\n      columns,\n      filterTypes,\n      defaultColumn,\n      initialState: {\n        hiddenColumns: columns.filter((col: any) => col.show === false).map((col) => col.id || col.accessor) as any,\n      },\n    },\n    ...hooks,\n  );\n\n  const {\n    getTableProps, headerGroups, getTableBodyProps, page, prepareRow, state,\n  } = instance;\n  const debouncedState = useDebounce(state, 500);\n\n  useEffect(() => {\n    const {\n      sortBy, filters, pageSize, columnResizing, hiddenColumns,\n    } = debouncedState;\n    const val = {\n      sortBy,\n      filters,\n      pageSize,\n      columnResizing,\n      hiddenColumns,\n    };\n    setInitialState(val);\n  }, [setInitialState, debouncedState]);\n\n  const cellClickHandler = (cell: Cell<T>) => () => {\n    onClick && !cell.column.isGrouped && !cell.row.isGrouped && cell.column.id !== '_selector' && onClick(cell.row);\n  };\n\n  const { role: tableRole, ...tableProps } = getTableProps();\n  return (\n    <>\n      <TableToolbar instance={instance} {...{ onAdd, onDelete, onEdit }} />\n      <FilterChipBar<T> instance={instance} />\n      <TableTable {...tableProps}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => {\n            const {\n              key: headerGroupKey,\n              title: headerGroupTitle,\n              role: headerGroupRole,\n              ...getHeaderGroupProps\n            } = headerGroup.getHeaderGroupProps();\n            return (\n              <TableHeadRow key={headerGroupKey} {...getHeaderGroupProps}>\n                {headerGroup.headers.map((column) => {\n                  const style = {\n                    textAlign: column.align ? column.align : 'left ',\n                  } as CSSProperties;\n                  const { key: headerKey, role: headerRole, ...getHeaderProps } = column.getHeaderProps(headerProps);\n                  const { title: groupTitle = '', ...columnGroupByProps } = column.getGroupByToggleProps();\n                  const { title: sortTitle = '', ...columnSortByProps } = column.getSortByToggleProps();\n\n                  return (\n                    <TableHeadCell key={headerKey} {...getHeaderProps}>\n                      {column.canGroupBy && (\n                        <Tooltip title={groupTitle}>\n                          <TableSortLabel\n                            active\n                            direction={column.isGrouped ? 'desc' : 'asc'}\n                            IconComponent={KeyboardArrowRight}\n                            {...columnGroupByProps}\n                            className={classes.headerIcon}\n                          />\n                        </Tooltip>\n                      )}\n                      {column.canSort ? (\n                        <Tooltip title={sortTitle}>\n                          <TableSortLabel\n                            active={column.isSorted}\n                            direction={column.isSortedDesc ? 'desc' : 'asc'}\n                            {...columnSortByProps}\n                            className={classes.tableSortLabel}\n                            style={style}\n                          >\n                            {column.render('Header')}\n                          </TableSortLabel>\n                        </Tooltip>\n                      ) : (\n                        <TableLabel style={style}>{column.render('Header')}</TableLabel>\n                      )}\n                      {/* <div>{column.canFilter ? column.render('Filter') : null}</div> */}\n                      {column.canResize && <ResizeHandle column={column} />}\n                    </TableHeadCell>\n                  );\n                })}\n              </TableHeadRow>\n            );\n          })}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            const { key: rowKey, role: rowRole, ...getRowProps } = row.getRowProps();\n            return (\n              <TableRow\n                key={rowKey}\n                {...getRowProps}\n                className={cx({ rowSelected: row.isSelected, clickable: onClick })}\n              >\n                {row.cells.map((cell) => {\n                  const { key: cellKey, role: cellRole, ...getCellProps } = cell.getCellProps(cellProps);\n                  return (\n                    <TableCell key={cellKey} {...getCellProps} onClick={cellClickHandler(cell)}>\n                      {cell.isGrouped ? (\n                        <>\n                          <TableSortLabel\n                            classes={{\n                              iconDirectionAsc: classes.iconDirectionAsc,\n                              iconDirectionDesc: classes.iconDirectionDesc,\n                            }}\n                            active\n                            direction={row.isExpanded ? 'desc' : 'asc'}\n                            IconComponent={KeyboardArrowUp}\n                            {...row.getToggleRowExpandedProps()}\n                            className={classes.cellIcon}\n                          />\n                          {' '}\n                          {cell.render('Cell', { editable: false })}\n                          {' '}\n                          (\n                          {row.subRows.length}\n                          )\n                        </>\n                      ) : cell.isAggregated ? (\n                        cell.render('Aggregated')\n                      ) : cell.isPlaceholder ? null : (\n                        cell.render('Cell')\n                      )}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </TableTable>\n      <TablePagination<T> instance={instance} />\n    </>\n  );\n}\n","// copied then trimmed from https://raw.githubusercontent.com/auth0/auth0.js/master/src/helper/object.js\n\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable guard-for-in */\n\nfunction camelToSnake(str: string) {\n  let newKey = ''\n  let index = 0\n  let code\n  let wasPrevNumber = true\n  let wasPrevUppercase = true\n\n  while (index < str.length) {\n    code = str.charCodeAt(index)\n    if ((!wasPrevUppercase && code >= 65 && code <= 90) || (!wasPrevNumber && code >= 48 && code <= 57)) {\n      newKey += '_'\n      newKey += str[index].toLowerCase()\n    } else {\n      newKey += str[index].toLowerCase()\n    }\n    wasPrevNumber = code >= 48 && code <= 57\n    wasPrevUppercase = code >= 65 && code <= 90\n    index++\n  }\n\n  return newKey\n}\n\nfunction snakeToCamel(str: string) {\n  const parts = str.split('_')\n  return parts.reduce((p, c) => p + c.charAt(0).toUpperCase() + c.slice(1), parts.shift()!)\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function toSnakeCase(object: any, exceptions: string[] = []): any {\n  if (typeof object !== 'object' || object === null) {\n    return object\n  }\n\n  return Object.keys(object).reduce((p: { [key: string]: any }, key: string) => {\n    const newKey = exceptions.indexOf(key) === -1 ? camelToSnake(key) : key\n    p[newKey] = toSnakeCase(object[key])\n    return p\n  }, {})\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function toCamelCase(object: any, exceptions: string[] = []): any {\n  if (typeof object !== 'object' || object === null) {\n    return object\n  }\n\n  return Object.keys(object).reduce((p: { [key: string]: any }, key: string) => {\n    const newKey = exceptions.indexOf(key) === -1 ? snakeToCamel(key) : key\n    p[newKey] = toCamelCase(object[key])\n    return p\n  }, {})\n}\n\nexport function camelToWords(str: string): string {\n  let newKey = ''\n  let index = 0\n  let code\n  let wasPrevNumber = true\n  let wasPrevUppercase = true\n\n  while (index < str.length) {\n    code = str.charCodeAt(index)\n    if (index === 0) {\n      newKey += str[index].toUpperCase()\n    } else if ((!wasPrevUppercase && code >= 65 && code <= 90) || (!wasPrevNumber && code >= 48 && code <= 57)) {\n      newKey += ' '\n      newKey += str[index].toUpperCase()\n    } else {\n      newKey += str[index].toLowerCase()\n    }\n    wasPrevNumber = code >= 48 && code <= 57\n    wasPrevUppercase = code >= 65 && code <= 90\n    index++\n  }\n\n  return newKey\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/prefer-default-export */\n// credits to https://usehooks.com/useLocalStorage/\n\nimport { useCallback, useState } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function useLocalStorage(key: string, initialValue: any) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    if (typeof window === 'undefined') {\n      return initialValue;\n    }\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = useCallback(\n    (value: any) => {\n      try {\n        // Save state\n        setStoredValue(value);\n        // Save to local storage\n        window.localStorage.setItem(key, JSON.stringify(value));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    },\n    [key],\n  );\n\n  return [storedValue, setValue];\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/prefer-default-export */\n// credit to https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\n\nimport { useEffect, useState } from 'react';\n\n// Our hook\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function useDebounce(value: any, delay: number): any {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Return a cleanup function that will be called every time ...\n      // ... useEffect is re-called. useEffect will only be re-called ...\n      // ... if value changes (see the inputs array below).\n      // This is how we prevent debouncedValue from changing if value is ...\n      // ... changed within the delay period. Timeout gets cleared and restarted.\n      // To put it in context, if the user is typing within our app's ...\n      // ... search box, we don't want the debouncedValue to update until ...\n      // ... they've stopped typing for more than 500ms.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [value, delay],\n  );\n\n  return debouncedValue;\n}\n"],"names":["useStyles","makeStyles","createStyles","filtersActiveLabel","color","fontSize","paddingRight","chipZone","padding","width","chipLabel","fontWeight","marginRight","filterChip","getFilterValue","column","filterValue","filter","min","max","FilterChipBar","_ref","instance","allColumns","setFilter","filters","state","handleDelete","useCallback","id","undefined","keys","length","h","className","classes","map","find","f","value","Chip","key","label","render","onDelete","variant","rows","matchSorter","row","values","fuzzyTextFilter","autoRemove","val","regex","comparator","defaultComparator","tokens","exec","parseFloat","parseValue","numericTextFilter","theme","tableTable","borderSpacing","border","tableHead","tableHeadRow","backgroundColor","palette","background","paper","text","primary","borderBottom","opacity","tableHeadCell","textAlign","verticalAlign","lineHeight","borderRight","tableBody","tableRow","outline","cursor","tableLabel","tableCell","resizeHandle","position","zIndex","borderLeft","light","height","top","transition","right","tableSortLabel","marginTop","marginLeft","headerIcon","iconDirectionAsc","transform","iconDirectionDesc","cellIcon","areEqual","prevProps","nextProps","checked","indeterminate","createTheme","TableTable","children","rest","_objectWithoutPropertiesLoose","_excluded","MuiTableTable","_extends","cx","TableBody","_ref2","_excluded2","MuiTableBody","TableHead","_ref3","_excluded3","MuiTableHead","TableHeadRow","_ref4","_excluded4","MuiTableRow","TableHeadCell","_ref5","_excluded5","MuiTableCell","TableRow","_ref6","_excluded6","TableCell","_ref7","_excluded7","TableLabel","_ref8","_excluded8","HeaderCheckbox","React","memo","styled","Checkbox","margin","RowCheckbox","ResizeHandle","getResizerProps","style","_cx","handleActive","isResizing","rowsPerPageOptions","MuiTablePagination","_MuiTablePagination","count","rowsPerPage","page","onChangePage","onChangeRowsPerPage","TablePaginationActions","props","root","flexShrink","spacing","onPageChange","IconButton","onClick","event","disabled","FirstPageIcon","KeyboardArrowLeft","Math","ceil","KeyboardArrowRight","LastPageIcon","TablePagination","_instance$state","pageIndex","pageSize","_instance$state$rowCo","rowCount","gotoPage","nextPage","previousPage","setPageSize","handleChangePage","newPage","e","Number","target","sx","paddingTop","component","onRowsPerPageChange","ActionsComponent","columnsPopOver","popoverTitle","textTransform","grid","display","gridTemplateColumns","gridColumnGap","gridRowGap","ColumnHidePage","anchorEl","onClose","show","toggleHideColumn","hideableColumns","onlyOneOptionLeft","reduce","acc","isVisible","Popover","open","anchorOrigin","vertical","horizontal","transformOrigin","Typography","FormControlLabel","control","onChange","filtersResetButton","cell","flexDirection","hidden","FilterPage","setAllFilters","onSubmit","preventDefault","resetFilters","Button","it","canFilter","type","toolbar","justifyContent","leftButtons","rightButtons","leftIcons","rightIcons","InstanceSmallIconActionButton","icon","enabled","_ref3$enabled","Tooltip","title","classnames","_classnames","SmallIconActionButton","_classnames2","_ref4$enabled","TableToolbar","onAdd","onEdit","columns","_useState","useState","setAnchorEl","_useState2","columnsOpen","setColumnsOpen","_useState3","filterOpen","setFilterOpen","handleColumnsClick","currentTarget","handleClose","Toolbar","AddIcon","selectedRowIds","Object","CreateIcon","DeleteIcon","ViewColumnsIcon","FilterListIcon","handleFilterClick","truncated","textOverflow","overflow","whiteSpace","TooltipCell","tooltip","align","MuiTooltip","findFirstColumn","getStyles","disableResizing","alignItems","headerProps","defaultColumn","Filter","setValue","_React$useState","useEffect","isFirstColumn","TextField","name","InputLabelProps","htmlFor","autoFocus","onBlur","Cell","_ref$column$align","Header","Fragment","startsWith","camelToWords","str","code","newKey","index","wasPrevNumber","wasPrevUppercase","charCodeAt","toUpperCase","toLowerCase","minWidth","maxWidth","useColumnOrder","useFilters","useGroupBy","useSortBy","useExpanded","useFlexLayout","usePagination","useResizeColumns","useRowSelect","hooks","push","disableGroupBy","Aggregated","getToggleAllRowsSelectedProps","getToggleRowSelectedProps","concat","useInstanceBeforeDimensions","headerGroups","headers","canResize","filterTypes","fuzzyText","numeric","initialValue","setStoredValue","setInitialState","window","item","localStorage","getItem","JSON","parse","error","console","log","setItem","stringify","useTable","apply","initialState","hiddenColumns","col","accessor","getTableProps","getTableBodyProps","prepareRow","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","sortBy","debouncedState","columnResizing","cellClickHandler","isGrouped","tableProps","headerGroup","getHeaderGroupProps","headerGroupKey","_headerGroup$getHeade","_column$getHeaderProp","getHeaderProps","headerKey","_column$getGroupByTog","getGroupByToggleProps","_column$getGroupByTog2","groupTitle","columnGroupByProps","_column$getSortByTogg","getSortByToggleProps","sortTitle","_column$getSortByTogg2","columnSortByProps","canGroupBy","TableSortLabel","active","direction","IconComponent","canSort","isSorted","isSortedDesc","getRowProps","rowKey","_row$getRowProps","rowSelected","isSelected","clickable","cells","getCellProps","cellProps","cellKey","_cell$getCellProps","isExpanded","KeyboardArrowUp","getToggleRowExpandedProps","editable","subRows","isAggregated","isPlaceholder"],"mappings":"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"}